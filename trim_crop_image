import pandas as pd
import cv2
import os
import matplotlib.pyplot as plt
from itertools import repeat
# author and license aida.science 13/11/2023

def trim(image, file_name, path):
    # get dimensions of image
    dm = image.shape
    height = image.shape[0]
    width = image.shape[1]
    channels = image.shape[2]

    print("primitive coordination are: ", width, height)

    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

    cv2.imshow("image", image)
    cv2.waitKey(0)
    # grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    # Find Canny edges
    edged = cv2.Canny(gray, 30, 200)
    # Finding Contours
    contours, hierarchy = cv2.findContours(edged, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
    # --------------------------------------------------
    i = 0
    dimensions = list()
    boundingBoxes = [cv2.boundingRect(c) for c in contours]
    (contours, boundingBoxes) = zip(*sorted(zip(contours, boundingBoxes), key=lambda b: b[1][i], reverse=True))
    # --------------------------------------------------
    for ct in contours:
        x, y, w, h = cv2.boundingRect(ct)
        # print("x= ", x, " x+w= ", x + w - 1, " y= ", y, "y+h=", y + h)
        dimensions.append([x, x + w, y, y + h])

    df = pd.DataFrame(dimensions, columns=['left', 'right', 'top', 'bottom'])
    print(df)
    left = df['left'].min()
    right = df['right'].max()
    top = df['top'].min()
    bottom = df['bottom'].max()
    print("The coordination's are ", left, " ", right, " ", top, " ", bottom)
    crop_image = image[top:bottom, left:right]
    # cv2.imshow("Cropped and Trimmed", crop_image)
    # cv2.waitKey(0)
    cv2.imwrite(path + file_name, crop_image)


path = "mesraa/crop/"
folder = "mesraa/parts/"
for file_name in os.listdir(folder):
    image = cv2.imread(os.path.join(folder, file_name))
    trim(image, file_name, path)
